function PlotSCortex(reportPath, Cortex)

if(~isfolder(reportPath))
    mkdir(reportPath);
end

template        = load('axes.mat');
currentAxes = template.axes;
% Selecting Hemisphere
patch( currentAxes,...
    'Faces',            Cortex.Faces, ...
    'Vertices',         Cortex.Vertices,...
    'VertexNormals',    Cortex.VertNormals, ...
    'VertexNormalsMode', 'auto',...
    'FaceNormals',      [],...
    'FaceNormalsMode',  'auto',...
    'FaceVertexCData',  [], ...
    'FaceColor',        [0.7 0.7 0.7], ...
    'FaceAlpha',        1, ...
    'AlphaDataMapping', 'none', ...
    'EdgeColor',        'none', ...
    'EdgeAlpha',        1, ...
    'LineWidth',         0.5,...
    'LineJoin',         'miter',...
    'AmbientStrength',  0.5, ...
    'DiffuseStrength',  0.5, ...
    'SpecularStrength', 0.2, ...
    'SpecularExponent', 1, ...
    'SpecularColorReflectance', 0.5, ...
    'FaceLighting',     'gouraud', ...
    'EdgeLighting',     'gouraud', ...
    'Tag',              'AnatSurface');

sAtlas = Cortex.Atlas(Cortex.iAtlas);
sScouts = sAtlas.Scouts;
Vertices = Cortex.Vertices;
Faces = Cortex.Faces;
% Process each scout
for i = 1:length(sScouts)
    scoutColor = sScouts(i).Color;
    % Get visible scouts vertices
    iScoutVert = sScouts(i).Vertices;
    patchVert = Vertices(iScoutVert,:);
    scoutFaces = [];
    countFace = 1;
    vertMask = false(length(Vertices),1);
    vertMask(iScoutVert) = true;
    iFacesTmp = find(vertMask(Faces(:,1)));
    iFacesTmp = iFacesTmp(vertMask(Faces(iFacesTmp,2)));
    iFacesTmp = iFacesTmp(vertMask(Faces(iFacesTmp,3)));
    patchFaces = Faces(iFacesTmp,:);
    [~, patchFaces] = ismember(patchFaces, iScoutVert);
    EdgeColor = 'none';
    patchAlpha = 0.2;
    patch(currentAxes,...
        'Faces',            patchFaces, ...
        'Vertices',         patchVert, ...
        'FaceVertexCData',  scoutColor, ...
        'FaceColor',        scoutColor, ...
        'EdgeColor',        EdgeColor,...
        'FaceAlpha',        1 - patchAlpha, ...
        'BackFaceLighting', 'lit', ...
        'Tag',              'ScoutPatch', ...
        'AmbientStrength',  0.5, ...
        'DiffuseStrength',  0.5, ...
        'SpecularStrength', 0.2, ...
        'SpecularExponent', 1, ...
        'SpecularColorReflectance', 0.5, ...
        'FaceLighting',     'gouraud', ...
        'EdgeLighting',     'gouraud');
end

fig = figure("Name","Source Model","Color","w", 'Position', get(0, 'Screensize'),'Visible','off');
set(currentAxes,"Parent",fig);
rotate3d(currentAxes,'on');
axis(currentAxes,'equal');
axis(currentAxes,'off');

% right view
view(currentAxes,0,0);
export_fig(fullfile(reportPath,'sourcemodel_right'),'-transparent','-png');
% left view
view(currentAxes,180,0);
export_fig(fullfile(reportPath,'sourcemodel_left'),'-transparent','-png');
% top view
view(currentAxes,0,90);
export_fig(fullfile(reportPath,'sourcemodel_top'),'-transparent','-png');
% bottom view
view(currentAxes,0,270);
export_fig(fullfile(reportPath,'sourcemodel_bottom'),'-transparent','-png');
close(fig);

end

