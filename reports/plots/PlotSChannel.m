function PlotSChannel(reportPath, Shead,Cdata)

if(~isfolder(reportPath))
    mkdir(reportPath);
end

template = load('axes.mat');
colorMap = load('tools/mycolormap_brain_basic_conn.mat');
currentAxes = template.axes;
Channel     = Cdata.Channel;
ChanLoc     = [Channel.Loc]';

patch(currentAxes, ...
    'Faces',Shead.Faces, ...
    'Vertices',Shead.Vertices, ...
    'FaceVertexCData',[], ...
    'FaceColor',[.6 .6 .6], ...
    'EdgeColor','none', ...
    'AlphaDataMapping', 'none', ...
    'EdgeColor',        'none', ...
    'EdgeAlpha',        1, ...
    'BackfaceLighting', 'lit', ...
    'AmbientStrength',  0.5, ...
    'DiffuseStrength',  0.5, ...
    'SpecularStrength', 0.2, ...
    'SpecularExponent', 1, ...
    'SpecularColorReflectance', 0.5, ...
    'FaceLighting',     'gouraud', ...
    'EdgeLighting',     'gouraud', ...
    'FaceAlpha',.99);
ctColor         = [.9,.9,0]; % Yellow
nVert           = 34;
ElectrodeGrid = CreateGeometry3DElectrode_2(ChanLoc,'EEG',Shead, ctColor, nVert);
patch(currentAxes,...
    'Faces',               ElectrodeGrid.Faces, ...
    'Vertices',            ElectrodeGrid.Vertices,...
    'FaceVertexCData',     ElectrodeGrid.FaceVertexCData, ...
    'FaceVertexAlphaData', ElectrodeGrid.FaceVertexAlphaData, ...
    'FaceColor',           'flat', ...
    'FaceAlpha',           'flat', ...
    'AlphaDataMapping',    'none', ...
    ElectrodeGrid.Options{:});
colormap(gca,colorMap.cmap_a);

fig = figure("Name","Channels","Color","w", 'Position', get(0, 'Screensize'),'Visible','off');
set(currentAxes,"Parent",fig);
rotate3d(currentAxes,'on');
% right view
view(currentAxes,0,0);
export_fig(fullfile(reportPath,'channels_right'),'-transparent','-png');
% left view
view(currentAxes,180,0);
export_fig(fullfile(reportPath,'channels_left'),'-transparent','-png');
% top view
view(currentAxes,90,0);
export_fig(fullfile(reportPath,'channels_front'),'-transparent','-png');
% front view
view(currentAxes,270,0);
export_fig(fullfile(reportPath,'channels_back'),'-transparent','-png');
close(fig);

end