function PlotHeadModel(reportPath, Shead,Souter,Sinner,Cortex)

if(~isfolder(reportPath))
    mkdir(reportPath);
end

template = load('axes.mat');
currentAxes = template.axes;
isScalp = 1;
isOuter = 1;
isInner = 1;
isCortex = 1;

if(isCortex)
    patch( currentAxes,...
        'Faces',            Cortex.Faces, ...
        'Vertices',         Cortex.Vertices,...
        'VertexNormals',    Cortex.VertNormals, ...
        'VertexNormalsMode', 'auto',...
        'FaceNormals',      [],...
        'FaceNormalsMode',  'auto',...
        'FaceVertexCData',  [], ...
        'FaceColor',        [255/255 204/255 204/255], ...
        'FaceAlpha',        1, ...
        'AlphaDataMapping', 'none', ...
        'EdgeColor',        'none', ...
        'EdgeAlpha',        1, ...
        'LineWidth',         0.5,...
        'LineJoin',         'miter',...
        'AmbientStrength',  0.5, ...
        'DiffuseStrength',  0.5, ...
        'SpecularStrength', 0.2, ...
        'SpecularExponent', 1, ...
        'SpecularColorReflectance', 0.5, ...
        'FaceLighting',     'gouraud', ...
        'EdgeLighting',     'gouraud', ...
        'Tag',              'AnatSurface');
end
if(isInner)
    patch( currentAxes,...
        'Faces',            Sinner.Faces, ...
        'Vertices',         Sinner.Vertices,...
        'VertexNormals',    Sinner.VertNormals, ...
        'VertexNormalsMode', 'auto',...
        'FaceNormals',      [],...
        'FaceNormalsMode',  'auto',...
        'FaceVertexCData',  [],...
        'FaceColor',        [0.7 0.7 0.7], ...
        'FaceAlpha',        .30, ...
        'AlphaDataMapping', 'none', ...
        'EdgeColor',        'none', ...
        'EdgeAlpha',        .30, ...
        'LineWidth',         0.5,...
        'LineJoin',         'miter',...
        'AmbientStrength',  0.5, ...
        'DiffuseStrength',  0.5, ...
        'SpecularStrength', 0.2, ...
        'SpecularExponent', 1, ...
        'SpecularColorReflectance', 0.5, ...
        'FaceLighting',     'gouraud', ...
        'EdgeLighting',     'gouraud', ...
        'Tag',              'AnatSurface');
end
if(isOuter)
    patch( currentAxes,...
        'Faces',            Souter.Faces, ...
        'Vertices',         Souter.Vertices,...
        'VertexNormals',    Souter.VertNormals, ...
        'VertexNormalsMode', 'auto',...
        'FaceNormals',      [],...
        'FaceNormalsMode',  'auto',...
        'FaceVertexCData',  [], ...
        'FaceColor',        [0.7 0.7 0.7], ...
        'FaceAlpha',        .20, ...
        'AlphaDataMapping', 'none', ...
        'EdgeColor',        'none', ...
        'EdgeAlpha',        .20, ...
        'LineWidth',         0.5,...
        'LineJoin',         'miter',...
        'AmbientStrength',  0.5, ...
        'DiffuseStrength',  0.5, ...
        'SpecularStrength', 0.2, ...
        'SpecularExponent', 1, ...
        'SpecularColorReflectance', 0.5, ...
        'FaceLighting',     'gouraud', ...
        'EdgeLighting',     'gouraud', ...
        'Tag',              'AnatSurface');
end
if(isScalp)
    patch( currentAxes,...
        'Faces',            Shead.Faces, ...
        'Vertices',         Shead.Vertices,...
        'VertexNormals',    Shead.VertNormals, ...
        'VertexNormalsMode', 'auto',...
        'FaceNormals',      [],...
        'FaceNormalsMode',  'auto',...
        'FaceVertexCData',  [], ...
        'FaceColor',        [0.7 0.7 0.7], ...
        'FaceAlpha',        .10, ...
        'AlphaDataMapping', 'none', ...
        'EdgeColor',        'none', ...
        'EdgeAlpha',        .10, ...
        'LineWidth',         0.5,...
        'LineJoin',         'miter',...
        'AmbientStrength',  0.5, ...
        'DiffuseStrength',  0.5, ...
        'SpecularStrength', 0.2, ...
        'SpecularExponent', 1, ...
        'SpecularColorReflectance', 0.5, ...
        'FaceLighting',     'gouraud', ...
        'EdgeLighting',     'gouraud', ...
        'Tag',              'AnatSurface');
end

fig = figure("Name","Head Model","Color","w", 'Position', get(0, 'Screensize'),'Visible','off');
set(currentAxes,"Parent",fig);
rotate3d(currentAxes,'on');
% right view
view(currentAxes,0,0);
export_fig(fullfile(reportPath,'headmodel_right'),'-transparent','-png');
% left view
view(currentAxes,180,0);
export_fig(fullfile(reportPath,'headmodel_left'),'-transparent','-png');
% top view
view(currentAxes,0,90);
export_fig(fullfile(reportPath,'headmodel_top'),'-transparent','-png');
% front view
view(currentAxes,90,0);
export_fig(fullfile(reportPath,'headmodel_front'),'-transparent','-png');
close(fig);

end